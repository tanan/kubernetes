apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  revisionHistoryLimit: 2
  paused: false
  replicas: 2
  minReadySeconds: 20
  selector:
    matchLabels:
      role: db
  template:
    metadata:
      name: db
      labels:
        role: db
    spec:
      containers:
        - name: db
          image: postgres:9.4
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: db-data
          hostPath:
            path: /var/tmp/pgdata
            type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    role: db
spec:
  selector:
    role: db
  ports:
    - port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 3
  paused: false
  replicas: 2
  minReadySeconds: 20
  selector:
    matchLabels:
      role: cache
  template:
    metadata:
      name: vote
      labels:
        app: redis
        role: cache
    spec:
      containers:
        - name: redis
          image: redis:latest
          ports:
            - containerPort: 6379
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    role: cache
spec:
  selector:
    role: cache
  ports:
    - port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vote
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  revisionHistoryLimit: 4
  paused: false
  replicas: 4
  minReadySeconds: 20
  selector:
    matchLabels:
      role: vote
    matchExpressions:
      - {key: version, operator: In, values: [v1, v2, v3]}
  template:
    metadata:
      name: vote
      labels:
        app: python
        role: vote
        version: v1
    spec:
      containers:
        - name: app
          image: schoolofdevops/vote:v2
          ports:
            - containerPort: 80
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: vote
  labels:
    role: vote
spec:
  selector:
    role: vote
  ports:
    - port: 80
      targetPort: 80
      nodePort: 31808
  type: NodePort
